#encoding=utf-8

'''
Created on 2015年12月12日

@author: luobu
'''

import redis
import os
import csv
from mynlp import mycorpus
import logging
logging.basicConfig(format='%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s',
                     datefmt='%a, %d %b %Y %H:%M:%S',
                     filename = '../../log/WeCheat.log',
                     level=logging.INFO) 

class WeCheat(object):
    '''
    classdocs
    '''


    def __init__(self, docspath,corpus_path,dic_path):
        '''
        Constructor
        '''
        self.r = redis.Redis(db=2)
        self.p = self.r.pipeline()
        self.docspath = docspath
        self.redisdocs = 'docs' #包含所有文章id的集合        
        self.CC = mycorpus.MyCorpus(corpus_path,dic_path)
    def calcsim(self):
        self.CC.gensim()
    def __cheatunion__(self):
        
        // 初始化并查集
#define N 100
int father[N];
void init() {
    for(int i=0; i<N; i++)
      father[i] = i;
}
// 合并两个元素所在的集合
void union(int x,int y) {
    x = getfather(x);
    y = getfather(y);
    if(x!= y)
       father[x]=y;
}
// 判断两个元素是否属于同一个集合
bool same(int x,int y) {
    return getfather(x)==getfather(y);
}
// 获取根结点
int getfather(int x) {
    while(x != father[x])
      x = father[x];
    return x;
}
        
    def save_basicinfo(self):
        for root,dirs,files in os.walk(self.docspath):
            for f in files:
                if os.path.splitext(f)[1]!= '.csv':
                    continue
                linkfile = os.path.join(root,f)
                with open(linkfile,'rb') as csvfile:
                    reader = csv.reader(csvfile)
                    num = 0
                    for line in reader:
                        tdict = {}
                        num = num +1
                        if num <= 2:
                            continue
                        url = line[3]
                        docid = url.split('&')[3].split('=')[1]
                        tdict['acntname'] = line[0]
                        tdict['acntid'] = line[1]
                        tdict['title'] = line[2]
                        tdict['url'] = url 
                        tdict['ptime'] = line[4]
                        tdict['readnum'] = line[5]
                        tdict['praznum'] = line[6]
                        tdict['isori'] = line[12] 
                        tdict['src'] = docid
                        tdict['srcmark'] = ""
                        self.p.hmset(docid,tdict)
                        self.p.sadd(self.redisdocs,docid)
                #os.rename(linkfile,linkfile+'.done')
        self.p.execute()
                        
        
                        
                        
                        